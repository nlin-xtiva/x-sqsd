akka {
  loglevel = "DEBUG"

  # Comment this line if you want to see the real dispatcher being used
  # This will only be possible changing the pattern into logback file
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  actor {
    debug {
      receive = off
      autoreceive = off
      lifecycle = off
    }
  }

  http {
    host-connection-pool {
      max-connections = 24
      max-open-requests = 256
      idle-timeout = 60s
      max-retries = 5
    }
  }
}

app {
  region = "us-east-1"
  region = ${?AWS_DEFAULT_REGION}
  waitTimeSeconds = 20
  waitTimeSeconds = ${?SQSD_WAIT_TIME_SECONDS}
  workerConcurrency = 10
  workerConcurrency = ${?SQSD_WORKER_CONCURRENCY}
  workerTimeout = 30000
  workerTimeout = ${?SQSD_WORKER_TIMEOUT}
  workerHttpUrl = ${?SQSD_WORKER_HTTP_URL}
  workerHttpRequestContentType = "application/json"
  workerHttpRequestContentType = ${?SQSD_WORKER_HTTP_REQUEST_CONTENT_TYPE}
  workerHealthUrl = ${?SQSD_WORKER_HEALTH_URL}
  workerHealthWaitTime = 30 # in seconds
  workerHealthWaitTime = ${?SQSD_WORKER_HEALTH_WAIT_TIME}
  queueURL = ${?SQSD_QUEUE_URL}
}

akka.http.client {
  connecting-timeout = 3s
  idle-timeout = 30s
}

http-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 10
  }
  throughput = 5
}
